plugins {
	id 'base'
}

def pathToDirName(String path) {
	return path.replaceAll('^\\:', '').replaceAll('[0-9]+\\.', '').replace(':', '.')
}

subprojects {
	def hasJavaFiles = fileTree(dir: "${projectDir}/src/main/java", includes: ['**/*.java']).size() > 0

	if (project.childProjects.isEmpty() && hasJavaFiles) {
		apply plugin: 'java'
		apply plugin: 'idea'
		apply plugin: 'eclipse'

		version = '1.0.0-SNAPSHOT'
		group = "co.edu.poligran.numbermatch.${pathToDirName(project.path)}"
		buildDir = "${rootProject.projectDir}/../dist/${pathToDirName(project.path)}/build"

		repositories {
			mavenCentral()
		}

		dependencies {
			testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
			testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
		}

		tasks.withType(JavaCompile) {
			sourceCompatibility = 21
			targetCompatibility = 21
            options.encoding = 'UTF-8'
            options.release = 21
		}

		test {
			useJUnitPlatform()
		}

		tasks.named('build') {
			dependsOn 'javadocAll'
		}

		task javadocAll(type: Javadoc) {
			source = project.sourceSets.main.allJava
			classpath += project.sourceSets.main.compileClasspath
			destinationDir = file("${rootProject.projectDir}/../dist/${pathToDirName(project.path)}/docs")
			options {
				encoding 'UTF-8'
				charSet 'UTF-8'
				links("https://docs.oracle.com/javase/8/docs/api/")
			}
		}
	}
}
